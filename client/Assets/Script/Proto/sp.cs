// Generated by github.com/davyxu/gosproto/sprotogen
// DO NOT EDIT!
using System;
using Sproto;
using System.Collections.Generic;

namespace proto
{



	
	public class LoginACK : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		[SprotoHasField]
		public bool HasResult{
			get { return base.has_field.has_field(0); }
		}
		
		private Int32 _Result; // tag 0
		public Int32 Result {
			get{ return _Result; }
			set{ base.has_field.set_field(0,true); _Result = value; }
		}
		
		[SprotoHasField]
		public bool HasToken{
			get { return base.has_field.has_field(1); }
		}
		
		private string _Token; // tag 1
		public string Token {
			get{ return _Token; }
			set{ base.has_field.set_field(1,true); _Token = value; }
		}
		
		
		public LoginACK() : base(max_field_count) {}
		
		public LoginACK(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				case 0:
					this.Result = base.deserialize.read_int32();
					break;
				
				case 1:
					this.Token = base.deserialize.read_string();
					break;
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			
			if (base.has_field.has_field (0)) {
				base.serialize.write_int32(this.Result, 0);
			}
			
			if (base.has_field.has_field (1)) {
				base.serialize.write_string(this.Token, 1);
			}
			

			return base.serialize.close ();
		}
	}

	
	public class LoginREQ : SprotoTypeBase {
		private static int max_field_count = 1;
		
		
		[SprotoHasField]
		public bool HasPlatformToken{
			get { return base.has_field.has_field(0); }
		}
		
		private string _PlatformToken; // tag 0
		public string PlatformToken {
			get{ return _PlatformToken; }
			set{ base.has_field.set_field(0,true); _PlatformToken = value; }
		}
		
		
		public LoginREQ() : base(max_field_count) {}
		
		public LoginREQ(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				case 0:
					this.PlatformToken = base.deserialize.read_string();
					break;
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			
			if (base.has_field.has_field (0)) {
				base.serialize.write_string(this.PlatformToken, 0);
			}
			

			return base.serialize.close ();
		}
	}

	
	public class PeerConnectError : SprotoTypeBase {
		private static int max_field_count = 0;
		
		
		
		public PeerConnectError() : base(max_field_count) {}
		
		public PeerConnectError(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			

			return base.serialize.close ();
		}
	}

	
	public class PeerConnected : SprotoTypeBase {
		private static int max_field_count = 0;
		
		
		
		public PeerConnected() : base(max_field_count) {}
		
		public PeerConnected(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			

			return base.serialize.close ();
		}
	}

	
	public class PeerDisconnected : SprotoTypeBase {
		private static int max_field_count = 0;
		
		
		
		public PeerDisconnected() : base(max_field_count) {}
		
		public PeerDisconnected(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			

			return base.serialize.close ();
		}
	}

	
	public class PeerRecvError : SprotoTypeBase {
		private static int max_field_count = 0;
		
		
		
		public PeerRecvError() : base(max_field_count) {}
		
		public PeerRecvError(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			

			return base.serialize.close ();
		}
	}

	
	public class PeerSendError : SprotoTypeBase {
		private static int max_field_count = 0;
		
		
		
		public PeerSendError() : base(max_field_count) {}
		
		public PeerSendError(byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}
		
		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}
		
		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			

			return base.serialize.close ();
		}
	}


    public class RegisterEntry
    {
        static readonly Type[] _types = new Type[]{ 
                typeof(LoginACK), // 3964561136
                typeof(LoginREQ), // 2266274450
                typeof(PeerConnectError), // 780565736
                typeof(PeerConnected), // 1162626543
                typeof(PeerDisconnected), // 3629069126
                typeof(PeerRecvError), // 3264497882
                typeof(PeerSendError), // 4009711215
            };

        public static Type[] GetClassTypes()
        {
            return _types;
        }

    }
}
