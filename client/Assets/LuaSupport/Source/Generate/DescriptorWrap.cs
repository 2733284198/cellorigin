//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DescriptorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Descriptor), typeof(ProtoBase));
		L.RegFunction("GetFieldByName", GetFieldByName);
		L.RegFunction("New", _CreateDescriptor);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDescriptor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				ProtoBase arg0 = (ProtoBase)ToLua.CheckObject(L, 1, typeof(ProtoBase));
				google.protobuf.DescriptorProto arg1 = (google.protobuf.DescriptorProto)ToLua.CheckObject(L, 2, typeof(google.protobuf.DescriptorProto));
				Descriptor obj = new Descriptor(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Descriptor.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFieldByName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Descriptor obj = (Descriptor)ToLua.CheckObject(L, 1, typeof(Descriptor));
			string arg0 = ToLua.CheckString(L, 2);
			FieldDescriptor o = obj.GetFieldByName(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

