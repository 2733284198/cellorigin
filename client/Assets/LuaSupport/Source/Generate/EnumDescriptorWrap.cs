//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EnumDescriptorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EnumDescriptor), typeof(ProtoBase));
		L.RegFunction("GetValueByName", GetValueByName);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetValueByName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EnumDescriptor obj = (EnumDescriptor)ToLua.CheckObject(L, 1, typeof(EnumDescriptor));
			string arg0 = ToLua.CheckString(L, 2);
			EnumValueDescriptor o = obj.GetValueByName(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

