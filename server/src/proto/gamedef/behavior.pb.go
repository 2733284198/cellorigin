// Code generated by protoc-gen-go.
// source: behavior.proto
// DO NOT EDIT!

package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

//
type TriggerType int32

const (
	TriggerType_TriggerNone TriggerType = 0
	TriggerType_EventLogin  TriggerType = 11
	TriggerType_EventLogout TriggerType = 12
	TriggerType_RecvMessage TriggerType = 20
)

var TriggerType_name = map[int32]string{
	0:  "TriggerNone",
	11: "EventLogin",
	12: "EventLogout",
	20: "RecvMessage",
}
var TriggerType_value = map[string]int32{
	"TriggerNone": 0,
	"EventLogin":  11,
	"EventLogout": 12,
	"RecvMessage": 20,
}

func (x TriggerType) String() string {
	return proto.EnumName(TriggerType_name, int32(x))
}
func (TriggerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type ActionType int32

const (
	ActionType_ActionNone ActionType = 0
)

var ActionType_name = map[int32]string{
	0: "ActionNone",
}
var ActionType_value = map[string]int32{
	"ActionNone": 0,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type BehaviorDefine struct {
	ID            int32       `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Enable        bool        `protobuf:"varint,2,opt,name=Enable,json=enable" json:"Enable,omitempty"`
	Trigger       TriggerType `protobuf:"varint,11,opt,name=Trigger,json=trigger,enum=gamedef.TriggerType" json:"Trigger,omitempty"`
	MessageName   string      `protobuf:"bytes,12,opt,name=MessageName,json=messageName" json:"MessageName,omitempty"`
	ConditionExpr string      `protobuf:"bytes,21,opt,name=ConditionExpr,json=conditionExpr" json:"ConditionExpr,omitempty"`
	Action        ActionType  `protobuf:"varint,31,opt,name=Action,json=action,enum=gamedef.ActionType" json:"Action,omitempty"`
}

func (m *BehaviorDefine) Reset()                    { *m = BehaviorDefine{} }
func (m *BehaviorDefine) String() string            { return proto.CompactTextString(m) }
func (*BehaviorDefine) ProtoMessage()               {}
func (*BehaviorDefine) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

// [table] GenTableCode: true
type BehaviorFile struct {
	Behavior []*BehaviorDefine `protobuf:"bytes,1,rep,name=Behavior,json=behavior" json:"Behavior,omitempty"`
}

func (m *BehaviorFile) Reset()                    { *m = BehaviorFile{} }
func (m *BehaviorFile) String() string            { return proto.CompactTextString(m) }
func (*BehaviorFile) ProtoMessage()               {}
func (*BehaviorFile) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *BehaviorFile) GetBehavior() []*BehaviorDefine {
	if m != nil {
		return m.Behavior
	}
	return nil
}

func init() {
	proto.RegisterType((*BehaviorDefine)(nil), "gamedef.BehaviorDefine")
	proto.RegisterType((*BehaviorFile)(nil), "gamedef.BehaviorFile")
	proto.RegisterEnum("gamedef.TriggerType", TriggerType_name, TriggerType_value)
	proto.RegisterEnum("gamedef.ActionType", ActionType_name, ActionType_value)
}

func init() { proto.RegisterFile("behavior.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x91, 0xdd, 0x4e, 0xc2, 0x30,
	0x14, 0xc7, 0x05, 0xe3, 0x98, 0xa7, 0x63, 0x2e, 0x15, 0xb5, 0x17, 0x26, 0x12, 0xe2, 0x05, 0xc1,
	0x64, 0x17, 0xf0, 0x04, 0xca, 0x66, 0x62, 0xa2, 0xc4, 0x34, 0xbc, 0xc0, 0x36, 0x0e, 0xb3, 0x89,
	0xb4, 0xcb, 0x98, 0x8b, 0x3e, 0xac, 0xef, 0x62, 0xd7, 0x7d, 0x80, 0x77, 0xfd, 0xfd, 0xcf, 0xe7,
	0xff, 0x14, 0xdc, 0x18, 0x3f, 0xa2, 0x52, 0xa8, 0xdc, 0xcf, 0x72, 0x55, 0x28, 0x3a, 0x48, 0xa3,
	0x1d, 0x6e, 0x70, 0x3b, 0xf9, 0xed, 0x81, 0xfb, 0xd4, 0xc4, 0x02, 0xdc, 0x0a, 0x89, 0xd4, 0x85,
	0xfe, 0x4b, 0xc0, 0x7a, 0xe3, 0xde, 0xf4, 0x8c, 0xf7, 0x45, 0x40, 0xaf, 0xc1, 0x0a, 0x65, 0x14,
	0x7f, 0x22, 0xeb, 0x6b, 0xcd, 0xe6, 0x16, 0x1a, 0xa2, 0x3e, 0x0c, 0xd6, 0xb9, 0x48, 0x53, 0xcc,
	0x19, 0xd1, 0x01, 0x77, 0x3e, 0xf2, 0x9b, 0xae, 0x7e, 0xa3, 0xaf, 0x7f, 0x32, 0xe4, 0x83, 0xa2,
	0x06, 0x3a, 0x06, 0xf2, 0x86, 0xfb, 0x7d, 0x94, 0xe2, 0x4a, 0xa7, 0x31, 0x47, 0xd7, 0x9c, 0x73,
	0xb2, 0x3b, 0x48, 0xf4, 0x1e, 0x86, 0x4b, 0x25, 0x37, 0xa2, 0x10, 0x4a, 0x86, 0xdf, 0x59, 0xce,
	0xae, 0x4c, 0xce, 0x30, 0x39, 0x16, 0xe9, 0x03, 0x58, 0x8f, 0x49, 0x45, 0xec, 0xce, 0x8c, 0xbd,
	0xec, 0xc6, 0xd6, 0xb2, 0x99, 0x6a, 0x45, 0xe6, 0x3d, 0x59, 0x82, 0xd3, 0xda, 0x7b, 0x16, 0x7a,
	0xe9, 0x05, 0xd8, 0x2d, 0x6b, 0x8b, 0xa7, 0x53, 0x32, 0xbf, 0xe9, 0xca, 0xff, 0xdf, 0x81, 0xdb,
	0xed, 0xcd, 0x66, 0xef, 0x40, 0x8e, 0x1c, 0xd1, 0x8b, 0x0e, 0x57, 0x4a, 0xa2, 0x77, 0xa2, 0x2f,
	0x06, 0x61, 0x89, 0xb2, 0x78, 0x55, 0xa9, 0x90, 0x1e, 0xa9, 0x12, 0x5a, 0x56, 0x5f, 0x85, 0xe7,
	0x54, 0x02, 0xc7, 0xa4, 0x6c, 0xec, 0x7b, 0xa3, 0xd9, 0x2d, 0xc0, 0x61, 0xd9, 0xaa, 0xbe, 0xa6,
	0xba, 0x5f, 0x6c, 0x99, 0x4f, 0x5a, 0xfc, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x55, 0xba, 0x97,
	0xb6, 0x01, 0x00, 0x00,
}
