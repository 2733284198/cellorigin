// Code generated by protoc-gen-go.
// source: router.proto
// DO NOT EDIT!

package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 路由上行数据
// router -> backend
type UpstreamACK struct {
	MsgID    uint32 `protobuf:"varint,1,opt,name=MsgID,json=msgID" json:"MsgID,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
	ClientID int64  `protobuf:"varint,3,opt,name=ClientID,json=clientID" json:"ClientID,omitempty"`
}

func (m *UpstreamACK) Reset()                    { *m = UpstreamACK{} }
func (m *UpstreamACK) String() string            { return proto.CompactTextString(m) }
func (*UpstreamACK) ProtoMessage()               {}
func (*UpstreamACK) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

// 关闭客户端
// backend -> router
type CloseClientACK struct {
	ClientID int64 `protobuf:"varint,1,opt,name=ClientID,json=clientID" json:"ClientID,omitempty"`
}

func (m *CloseClientACK) Reset()                    { *m = CloseClientACK{} }
func (m *CloseClientACK) String() string            { return proto.CompactTextString(m) }
func (*CloseClientACK) ProtoMessage()               {}
func (*CloseClientACK) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

// 路由下行数据
// backend -> router
type DownstreamACK struct {
	MsgID    uint32  `protobuf:"varint,1,opt,name=MsgID,json=msgID" json:"MsgID,omitempty"`
	Data     []byte  `protobuf:"bytes,2,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
	ClientID []int64 `protobuf:"varint,3,rep,name=ClientID,json=clientID" json:"ClientID,omitempty"`
}

func (m *DownstreamACK) Reset()                    { *m = DownstreamACK{} }
func (m *DownstreamACK) String() string            { return proto.CompactTextString(m) }
func (*DownstreamACK) ProtoMessage()               {}
func (*DownstreamACK) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

// 后台服务器到网关注册自己的连接
// backend -> router
type RegisterRouterBackendACK struct {
	SvcID string `protobuf:"bytes,1,opt,name=SvcID,json=svcID" json:"SvcID,omitempty"`
}

func (m *RegisterRouterBackendACK) Reset()                    { *m = RegisterRouterBackendACK{} }
func (m *RegisterRouterBackendACK) String() string            { return proto.CompactTextString(m) }
func (*RegisterRouterBackendACK) ProtoMessage()               {}
func (*RegisterRouterBackendACK) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func init() {
	proto.RegisterType((*UpstreamACK)(nil), "gamedef.UpstreamACK")
	proto.RegisterType((*CloseClientACK)(nil), "gamedef.CloseClientACK")
	proto.RegisterType((*DownstreamACK)(nil), "gamedef.DownstreamACK")
	proto.RegisterType((*RegisterRouterBackendACK)(nil), "gamedef.RegisterRouterBackendACK")
}

func init() { proto.RegisterFile("router.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xca, 0x2f, 0x2d,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x4f, 0xcc, 0x4d, 0x4d, 0x49,
	0x4d, 0x53, 0x0a, 0xe6, 0xe2, 0x0e, 0x2d, 0x28, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0x75, 0x74, 0xf6,
	0x16, 0x12, 0xe1, 0x62, 0xf5, 0x2d, 0x4e, 0xf7, 0x74, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0d,
	0x62, 0xcd, 0x05, 0x71, 0x84, 0x84, 0xb8, 0x58, 0x5c, 0x12, 0x4b, 0x12, 0x25, 0x98, 0x80, 0x82,
	0x3c, 0x41, 0x2c, 0x29, 0x40, 0xb6, 0x90, 0x14, 0x17, 0x87, 0x73, 0x4e, 0x66, 0x6a, 0x5e, 0x09,
	0x50, 0x31, 0x33, 0x50, 0x9c, 0x39, 0x88, 0x23, 0x19, 0xca, 0x57, 0xd2, 0xe1, 0xe2, 0x73, 0xce,
	0xc9, 0x2f, 0x4e, 0x85, 0x28, 0x00, 0x99, 0x8b, 0xac, 0x9a, 0x11, 0x4d, 0x75, 0x28, 0x17, 0xaf,
	0x4b, 0x7e, 0x79, 0x1e, 0xe5, 0x8e, 0x60, 0x46, 0x31, 0xd6, 0x80, 0x4b, 0x22, 0x28, 0x35, 0x3d,
	0xb3, 0x18, 0xe8, 0xe9, 0x20, 0xb0, 0xd7, 0x9d, 0x12, 0x93, 0xb3, 0x53, 0xf3, 0x52, 0xa0, 0x36,
	0x04, 0x97, 0x25, 0x43, 0x6d, 0xe0, 0x0c, 0x62, 0x2d, 0x06, 0x71, 0x92, 0xd8, 0xc0, 0x61, 0x63,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x3e, 0x38, 0xe9, 0x2b, 0x01, 0x00, 0x00,
}
